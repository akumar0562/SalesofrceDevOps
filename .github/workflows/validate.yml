# Unique name for this workflow
name: Validate PR on develop branch

on:
    pull_request:
      types: [opened, synchronize]
      branches: [   main, DevInt, QA, UAT, staging ]

# Jobs to be executed when the above conditions are met
jobs:
    validate-deployment-on-develop-org:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            - uses: actions/setup-node@v3
              with:
                node-version: '14'
            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: 'Read PR Body'
              env:
                PR_BODY: ${{github.event.pull_request.body}}
              run: |
                  echo $PR_BODY > ./pr_body.txt
                  node ./parsePR.js              
                  TESTS=$(cat testsToRun.txt)       
                  echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV
                  
            # Now Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 
            - name: DevInt Sandbox- Validation
              if: ${{ github.base_ref == 'DevInt' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            - name: QA Sandbox- Validation
              if: ${{ github.base_ref == 'QA' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            - name: UAT Sandbox- Validation
              if: ${{ github.base_ref == 'UAT' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            - name: Staging Sandbox- Validation
              if: ${{ github.base_ref == 'staging' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            - name: Main Production- Validation
              if: ${{ github.base_ref == 'main' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            # Authenticate to org using the URL stored in the text file
            - name: 'Authenticate to Integration Org'
              run: sfdx auth:sfdxurl:store -f ./SFDX_AUTH_URL.txt -s -a integration
            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/ 

            - name: 'Check-only deploy delta changes - run specified tests'
              if: ${{ env.APEX_TESTS != 'NoTestRun' }}
              run: |
                  echo ${{env.APEX_TESTS}}
                  sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunSpecifiedTests --runtests ${{env.APEX_TESTS}} --json

            # If the env variable equals all, we run all tests
            - name: 'Check-only deploy delta changes - run all tests'
              if: ${{ env.APEX_TESTS == 'NoTestRun' }}
              run: |
                  sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel NoTestRun  --json

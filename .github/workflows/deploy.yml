# Unique name for this workflow
name: Deploy master branch to production org

# Definition when the workflow should run
on:
    pull_request:
      types: [closed]
      branches: [   main, DevInt, QA, UAT, staging ]
      
# Jobs to be executed
jobs:
  merge_job:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps:
            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: 'Read PR Body'
              env:
                PR_BODY: ${{github.event.pull_request.body}}

              run: |
                echo $PR_BODY > ./pr_body.txt
                node ./parsePR.js              
                TESTS=$(cat testsToRun.txt)       
                echo "APEX_TESTS=$TESTS" >> $GITHUB_ENV
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 

            # Store secret for production org
            - name: DevInt Sandbox- Deployment
              if: ${{ github.ref == 'refs/heads/DevInt' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            - name: QA Sandbox- Deployment
              if: ${{ github.ref == 'refs/heads/QA' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            - name: UAT Sandbox- Deployment
              if: ${{ github.ref == 'refs/heads/UAT' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            - name: Staging Sandbox- Deployment
              if: ${{ github.ref == 'refs/heads/staging' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt
            - name: Main Production- Deployment
              if: ${{ github.ref == 'refs/heads/main' }}
              shell: bash
              run: |
                  echo ${{ secrets.SFDX_AUTH_URL }} > ./SFDX_AUTH_URL.txt

            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

            # Authenticate to org
            - name: 'Authenticate to Production Org'
              run: sfdx auth:sfdxurl:store -f ./SFDX_AUTH_URL.txt -s -a production

            - name: 'deploy delta changes - run specified tests'
              if: ${{ env.APEX_TESTS != 'NoTestRun' }}
              run: |
                  echo ${{env.APEX_TESTS}}
                  sfdx force:source:deploy -p "changed-sources/force-app" --testlevel RunSpecifiedTests --runtests ${{env.APEX_TESTS}} --json
            # If the env variable equals NoTestRun, we run no tests
            - name: 'Check-only deploy delta changes - run No tests'
              if: ${{ env.APEX_TESTS == 'NoTestRun' }}
              run: |
                  sfdx force:source:deploy -p "changed-sources/force-app" --testlevel NoTestRun  --json
